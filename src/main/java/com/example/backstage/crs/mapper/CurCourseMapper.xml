<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.backstage.crs.mapper.CurCourseMapper">
    <select id="getTotalAttendance" resultType="double">
        select COALESCE(round(t1.attendence::numeric/t2.amount::numeric,4)*100, 0) as TotalAttendance from
          (
            select sum(SignedNumber/ReservableNumber) as attendence from Cur_TeamSchedule
            where isremoved=false
            and SignedNumber>=1 and ScheduleDate &gt;= #{begintime}::timestamp and ScheduleDate &lt;= #{endtime}::timestamp
            <if test="storeid !=null and storeid!=''">
                and storeid=#{storeid}::bigint
            </if>
          ) as t1,
          (
            select count(*) as amount  from Cur_TeamSchedule
            where isremoved=false
            and SignedNumber &gt;=1 and ScheduleDate &gt;= #{begintime}::timestamp and ScheduleDate &lt;= #{endtime}::timestamp
            <if test="storeid !=null and storeid!=''">
                and storeid=#{storeid}::bigint
            </if>
          ) as t2;
    </select>
    <select id="getGroupClassAttendance" resultType="double">
        select COALESCE(round(t1.attendence::numeric/t2.amount::numeric,4)*100, 0) as TotalAttendance from
        (
        select sum(SignedNumber/ReservableNumber) as attendence from Cur_TeamSchedule
        where isremoved=false and SignedNumber &gt;=1
        and ScheduleDate &gt;=#{begintime}::timestamp and ScheduleDate &lt;=#{endtime}::timestamp
        <if test="storeid !=null and storeid!=''">
            and storeid=#{storeid}::bigint
        </if>
        <if test="cid !=null and cid!=''">
            and cid=#{cid}::bigint
        </if>
        ) as t1,
        (
        select count(*) as amount  from Cur_TeamSchedule
        where isremoved=false and SignedNumber &gt;=1
        and ScheduleDate &gt;=#{begintime}::timestamp and ScheduleDate &lt;=#{endtime}::timestamp
        <if test="storeid !=null and storeid!=''">
            and storeid=#{storeid}::bigint
        </if>
        <if test="cid !=null and cid!=''">
            and cid=#{cid}::bigint
        </if>
        ) as t2;
    </select>
    
    <select id="getMonthlyAttendance" resultType="double">
        select COALESCE(round(t1.attendence::numeric/t2.amount::numeric,4)*100, 0) as monthlyAttendance from
        (
        select sum(SignedNumber/ReservableNumber) as attendence from Cur_TeamSchedule
        where isremoved=false and SignedNumber>=1
        and scheduledate &gt;=#{begintime}::timestamp and scheduledate &lt;=#{endtime}::timestamp
        <if test="storeid !=null and storeid!=''">
            and storeid=#{storeid}::bigint
        </if>
        and schedulebegin between #{coursetime}::time and #{courseendtime}::time
        ) as t1,
        (
        select count(*) as amount  from Cur_TeamSchedule
        where isremoved=false and SignedNumber>=1
        and scheduledate &gt;=#{begintime}::timestamp and scheduledate &lt;=#{endtime}::timestamp
        <if test="storeid !=null and storeid!=''">
            and storeid=#{storeid}::bigint
        </if>
        and schedulebegin between #{coursetime}::time and #{courseendtime}::time
        ) as t2;
    </select>
    <select id="getConversionRateOfGroupLessons" resultType="double">
        select round(t1.num::numeric/t2.num::numeric,4)*100 as ConversionRateOfGroupLessons from
        (select count(*) as num from (
        select ub.userid from user_base ub
        left join (select userid,cardno from Crd_MembershipCard_User) cmu
        on ub.userid = cmu.userid
        left join (select createdon,cardno,cardid,isfree from Crd_MembershipCard_Base) cmb
        on cmu.cardno = cmb.cardno
        left join (select coursetype,cardid,cardnumber from Crd_MembershipCardCategory_Base) cmcb
        on cmb.cardid = cmcb.cardid
        where cmcb.coursetype = #{coursetype}
        and cmb.isfree = false
        and cmcb.cardnumber='12'
        and cmb.CreatedOn &gt;=#{begintime}::timestamp
        and cmb.CreatedOn &lt;=#{endtime}::timestamp
        <if test="storeid !=null and storeid!=''">
            and ub.storeid=#{storeid}::bigint
        </if>
        and ub.userid in (
        select ub2.userid from user_base ub2
        left join (select userid,cardno from Crd_MembershipCard_User) cmu2
        on ub2.userid = cmu2.userid
        left join (select createdon,cardno,cardid,isfree from Crd_MembershipCard_Base) cmb2
        on cmu2.cardno = cmb2.cardno
        left join (select coursetype,cardid,cardnumber from Crd_MembershipCardCategory_Base) cmcb2
        on cmb2.cardid = cmcb2.cardid
        where cmcb2.coursetype = #{coursetype}
        and cmb2.isfree = true
        and cmcb2.cardnumber='12'
        and cmb.CreatedOn &gt;=#{begintime}::timestamp
        and cmb.CreatedOn &lt;=#{endtime}::timestamp
        <if test="storeid !=null and storeid!=''">
            and ub.storeid=#{storeid}::bigint
        </if>
        group by ub2.userid
        )
        group by ub.userid
        ) as t) as t1,
        (
        select count(*) as num from (
        select ub.userid from user_base ub
        left join (select userid,cardno from Crd_MembershipCard_User) cmu
        on ub.userid = cmu.userid
        left join (select createdon,cardno,cardid,isfree from Crd_MembershipCard_Base) cmb
        on cmu.cardno = cmb.cardno
        left join (select coursetype,cardid,cardnumber from Crd_MembershipCardCategory_Base) cmcb
        on cmb.cardid = cmcb.cardid
        where cmcb.coursetype = #{coursetype}
        and cmb.isfree = true
        and cmcb.cardnumber='12'
        and cmb.CreatedOn &gt;=#{begintime}::timestamp
        and cmb.CreatedOn &lt;=#{endtime}::timestamp
        <if test="storeid !=null and storeid!=''">
            and ub.storeid=#{storeid}::bigint
        </if>
        group by ub.userid
        ) as t
        ) as t2;
    </select>
    <select id="getNumberOfLessonsGroupLessons" resultType="Integer">
        select count(*) as Tnumber from Cur_TeamSchedule
        where IsRemoved=false and SignedNumber>0
        and scheduledate &gt;=#{begintime}::timestamp and scheduledate &lt;=#{endtime}::timestamp
        <if test="storeid !=null and storeid!=''">
            and storeid=#{storeid}::bigint
        </if>
    </select>

    <select id="getNumberOfPrivateLessons" resultType="Integer">
        select count(*) as Tnumber from Cur_PrivSchedule
        where IsRemoved=false and SignedNumber>0
        and scheduledate &gt;=#{begintime}::timestamp and scheduledate &lt;=#{endtime}::timestamp
        <if test="storeid !=null and storeid!=''">
            and storeid=#{storeid}::bigint
        </if>
    </select>

    <insert id="RegUserSendvcode">
        insert into res_phonemessage(sendid,senddate,mobile,sendtype,sendcode,effecminutes,enddate,senddetails,content,createdon,createdby,createdname,createdip)
         values(#{id},now(),#{num},1,#{code},30,now() + '30 min','【颜身运动】您在颜身运动请求的注册绑定验证码是：'+#{code}+'会员在小程序注册绑定',now(),#{num},#{num},'::1')
    </insert>

    <select id="getcourseinformation" resultType="map">
        select ub.name,ub.tel,oo.traineenum,cmb.cardname,oo.SignState,
            oo.OrdState,oo.Remarks,oo.createdon,ct.reservablenumber,oo.ordid,oo.userid,oo.cardno
        from Cur_TeamSchedule ct
        inner join Ord_OrderCourse oo on ct.scheduleid=oo.scheduleid
        inner join user_base ub on oo.userid=ub.userid
        inner join Crd_MembershipCard_Base cmb on oo.cardno=cmb.cardno
        where ct.ScheduleId=#{ScheduleId}::bigint
    </select>

    <select id="privatelessonschedule" resultType="map">
        select to_char(a.ScheduleDate,'yyyy-mm-dd') ScheduleDate,to_char(a.ScheduleBegin,'hh24:mi') ScheduleBegin,to_char(a.ScheduleEnd,'hh24:mi') ScheduleEnd,
        a.CourseId,a.CourseName,a.ReservableNumber,a.ReservedNumber,a.SignedNumber,b.coachid,b.CoachName,a.ScheduleId,a.StoreId,a.StoreName
        from Cur_PrivSchedule a left join Cur_PrivCourse_Base b on a.courseid=b.courseid
        where ScheduleDate &gt;=#{begintime}::timestamp
        and ScheduleDate  &lt;#{endtime}::timestamp+ interval '1 day' and a.isremoved=false
        <if test="storeid !=null and storeid!=''">
            and storeid=#{storeid}::bigint
        </if>
        <if test="coachid !=null and coachid!=''">
            and coachid=#{coachid}::bigint
        </if>
        order by ScheduleDate,ScheduleBegin
    </select>

    <select id="sijiaoyuyuerenshu" resultType="Integer">
        select count(*) from ord_ordercourse oo
        inner join Cur_PrivSchedule cp
        on oo.scheduleid=cp.scheduleid
        where oo.ordstate=1 and oo.isremoved=false
        and cp.scheduleid=#{scheduleid}::bigint
    </select>



    <update id="xiugaijifen">
        update user_base set Points=Points+#{points}::numeric
        where userid=#{userid}::bigint
    </update>

    <insert id="goukasongjifen">
        INSERT INTO log_user_points
        (userid,currentpoints,points,surpluspoints,remarks,createdon,createdby,createdname,
        createdip,actionstate,changeaction)
        VALUES
        (#{userid}::bigint,(select Points from user_base where userid=#{userid}::bigint)+#{points}::numeric,
        #{points}::numeric,
        (select Points from user_base where userid=#{userid}::bigint)+#{points}::numeric,
        #{remarks},now(),#{createdby},
        #{createdname},#{createdip},'+',
        '购卡送积分');
    </insert>

    <select id="ticeliebiao" resultType="map">
        select testname,testvalue,to_char(createdon,'yyyy-MM-dd') createdon from Org_PhysicalTest_User
        where userid=#{userid}::bigint
        and isremoved=false
        order by createdon asc
    </select>

</mapper>